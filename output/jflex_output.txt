Token: BEGIN, Value: begin
Token: INT, Value: int
Token: ID, Value: x
Token: SEMICOLON, Value: ;
Token: INT, Value: int
Token: ID, Value: y
Token: ASSIGN, Value: =
Token: ID, Value: x
Token: PLUS, Value: +
Token: NUMBER, Value: 1
Token: SEMICOLON, Value: ;
Token: BOOL, Value: bool
Token: ID, Value: a
Token: SEMICOLON, Value: ;
Token: IF, Value: if
Token: LPAREN, Value: (
Token: ID, Value: x
Token: GT, Value: >
Token: ID, Value: a
Token: RPAREN, Value: )
Token: THEN, Value: then
Token: LBRACE, Value: {
Token: INT, Value: int
Token: ID, Value: c
Token: ASSIGN, Value: =
Token: NUMBER, Value: 1
Token: SEMICOLON, Value: ;
Token: RBRACE, Value: }
Token: ELSE, Value: else
Token: LBRACE, Value: {
Token: ID, Value: y
Token: ASSIGN, Value: =
Token: ID, Value: x
Token: SEMICOLON, Value: ;
Token: ID, Value: x
Token: ASSIGN, Value: =
Token: ID, Value: x
Token: PLUS, Value: +
Token: NUMBER, Value: 1
Token: SEMICOLON, Value: ;
Token: RBRACE, Value: }
Token: PRINT, Value: print
Token: LPAREN, Value: (
Token: ID, Value: a
Token: RPAREN, Value: )
Token: SEMICOLON, Value: ;
Token: IF, Value: if
Token: LPAREN, Value: (
Token: ID, Value: x
Token: GE, Value: >=
Token: ID, Value: a
Token: RPAREN, Value: )
Token: THEN, Value: then
Token: LBRACE, Value: {
Token: ID, Value: x
Token: ASSIGN, Value: =
Token: ID, Value: x
Token: PLUS, Value: +
Token: NUMBER, Value: 1
Token: SEMICOLON, Value: ;
Token: RBRACE, Value: }
Token: BOOL, Value: bool
Token: ID, Value: x
Token: ASSIGN, Value: =
Token: ID, Value: a
Token: EQ, Value: ==
Token: ID, Value: b
Token: SEMICOLON, Value: ;
Token: DO, Value: do
Token: LBRACE, Value: {
Token: INT, Value: int
Token: ID, Value: b
Token: ASSIGN, Value: =
Token: NUMBER, Value: 1
Token: SEMICOLON, Value: ;
Token: ID, Value: b
Token: ASSIGN, Value: =
Token: ID, Value: b
Token: MULT, Value: *
Token: NUMBER, Value: 10
Token: SEMICOLON, Value: ;
Token: ID, Value: a
Token: ASSIGN, Value: =
Token: LPAREN, Value: (
Token: ID, Value: b
Token: PLUS, Value: +
Token: NUMBER, Value: 10
Token: RPAREN, Value: )
Token: MULT, Value: *
Token: ID, Value: b
Token: SEMICOLON, Value: ;
Token: RBRACE, Value: }
Token: WHILE, Value: while
Token: LPAREN, Value: (
Token: ID, Value: a
Token: GT, Value: >
Token: NUMBER, Value: 1
Token: RPAREN, Value: )
Token: SEMICOLON, Value: ;
Token: PRINT, Value: print
Token: LPAREN, Value: (
Token: ID, Value: a
Token: PLUS, Value: +
Token: NUMBER, Value: 1
Token: RPAREN, Value: )
Token: SEMICOLON, Value: ;
Token: END, Value: end
