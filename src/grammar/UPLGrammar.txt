PROGRAM → begin STATEMENTS end

STATEMENTS → STATEMENT STATEMENTS | ε
STATEMENT → ASSIGNMENT | IF_STATEMENT | DO_WHILE | FOR_LOOP | PRINT | DECLARATION

DECLARATION → TYPE InitDeclarator ;

TYPE → int | bool
InitDeclarator → id | id = EXPRESSION

ASSIGNMENT → id = EXPRESSION ;

IF_STATEMENT → if ( EXPRESSION ) then { STATEMENTS } | if ( EXPRESSION ) then { STATEMENTS } else { STATEMENTS }

DO_WHILE → do { STATEMENTS } while ( EXPRESSION ) ;

FOR_LOOP → for ( ASSIGNMENT ; EXPRESSION ; ASSIGNMENT ) { STATEMENTS }

PRINT → print ( EXPRESSION ) ;

EXPRESSION → EQUALITY_EXPR
EQUALITY_EXPR → RELATIVE_EXPR == RELATIVE_EXPR | RELATIVE_EXPR
RELATIVE_EXPR → ADDITIVE_EXPR > ADDITIVE_EXPR | ADDITIVE_EXPR >= ADDITIVE_EXPR | ADDITIVE_EXPR
ADDITIVE_EXPR → MULTIPLICATIVE_EXPR + ADDITIVE_EXPR | MULTIPLICATIVE_EXPR
MULTIPLICATIVE_EXPR → PRIMARY_EXPR * MULTIPLICATIVE_EXPR | PRIMARY_EXPR
PRIMARY_EXPR → id | number | true | false | ( EXPRESSION )

id → letter (letter | digit)*
number → digit digit*
letter → a | b | c | ... | z | A | B | C | ... | Z
digit → 0 | 1 | 2 | ... | 9